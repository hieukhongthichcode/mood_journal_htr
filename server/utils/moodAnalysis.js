const axios = require('axios');

// Map nh√£n g·ªëc t·ª´ Flask/HuggingFace ‚Üí nh√£n chu·∫©n app d√πng
const moodMap = {
  joy: "joy",
  sadness: "sadness",
  anger: "anger",
  fear: "fear",
  disgust: "disgust",
  neutral: "neutral"
};

async function analyzeMood(text) {
  try {
    console.log("üì© N·ªôi dung g·ª≠i sang Flask:", text);

    const response = await axios.post("https://mood-ai-service.onrender.com/analyze", {
      content: text
    });

    console.log("üî• K·∫øt qu·∫£ tr·∫£ v·ªÅ t·ª´ Flask:", response.data);

    const mood = response.data;

    if (!mood || typeof mood.label !== 'string') {
      console.error("‚ö†Ô∏è D·ªØ li·ªáu tr·∫£ v·ªÅ kh√¥ng h·ª£p l·ªá:", mood);
      return { label: 'unknown', score: 0 };
    }

    const score = parseFloat(mood.score);
    if (isNaN(score)) {
      console.error("‚ö†Ô∏è Score kh√¥ng h·ª£p l·ªá:", mood.score);
      return { label: 'unknown', score: 0 };
    }

    const mappedLabel = moodMap[mood.label.toLowerCase()] || "unknown";

    console.log("‚úÖ Sau khi mapping:", { label: mappedLabel, score });

    return {
      label: mappedLabel,
      score
    };
  } catch (error) {
    console.error("‚ùå L·ªói khi g·ªçi Flask:", error.message);
    if (error.response) {
      console.error("üì• Flask tr·∫£ v·ªÅ l·ªói:", error.response.data);
    }
    return { label: 'unknown', score: 0 };
  }
}

module.exports = analyzeMood;
